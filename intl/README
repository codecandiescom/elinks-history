When you add or delete any text, add or delete it in english.lng and run script
./synclang. It adds NULL entries to other languages.

When you change any text, run ./get-intl. It will generate header files from
the language files and place it inside src/intl/.

Menu hotkeys are also translated via this interface. You can specify more
hotkeys. Please try to have a hotkey for each menu item. Hotkey is denoted by
a tilde (~) preceding the given character.

===

There's a nice guide written by Petr Kulhavy <brain@artax.karlin.mff.cuni.cz>
and Petr Baudis <pasky@ucw.cz>:

Instructions how to add a new language to ELinks:

* cd intl
* cp english.lng your_language.lng
* vi your language.lng
* change the string in quotes on the line T__CHAR_SET to the charset of your
translation
* change the string in quotes on the line T__LANGUAGE to name of your language
* change the string in quotes on the line T__ISO_639_CODE to code of your
language (note that this is tricky a bit if your language code is variant of
another language, see src/intl/language.c, comment near language_iso639_code(),
for details)
* translate all the texts (T_<something>) to your language, don't mangle
* small and capital letters
* vi index.txt
* add your language (only the name without the .lng suffix) to
* index.txt on single line
* ./synclang
* cd ..
* make
* check if the translation is correct
* send it to links-discuss

===

COMMENTS in .lng files:

You can use # at start of line to mark a line as commented.
When commented, a line will not be included in generated
files (the ones we compile).
ie. #T_SAMPLE

Always use comments in english.lng, then resync other files
using ./synclang script.

===

Synchronising translations and sources:

Just run the ./sync_vs_source.sh script from intl/

It will generate a patch against english.lng.
Patch english.lng then edit english.lng if needed.
Run ./synclang

===

$Id: README,v 1.11 2003/01/03 02:17:03 pasky Exp $

vim: textwidth=80
