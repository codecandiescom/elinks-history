TODO list for ELinks (mostly unsorted):


Major goals:

+ Rewrite HTML parser (see ELusive)

- EcmaScript (http://home.worldcom.ch/~jmlugrin/fesi/)

- Then, support for proxy autoconfiguration
  (http://www.netscape.com/eng/mozilla/2.0/relnotes/demo/proxy-live.html)

- Graphics support

- Possibility to optionally use commandline-driven interface instead of BFU

- Full modularization, plugins mechanism

- Generalised scripting interface, possibly also supporting SWIG backend
  (http://www.swig.org/)

+ Reorganization of user interface


Minor first-level goals:

- Show all downloads in one window, kind of "download manager"

- Forward/backward history manager

- Cookie manager

- Disk cache

- Maintain in-core user URL "protocols" (like g:, gg:) instead of them living
  in Lua hooks. This also means much more user-friendly configuration, perhaps
  using Prefixes manager or so.


ELusive:

See src/elusive/TODO.


Original HTML engine:

- Better support for vlink - we have to update already rendered document

- Support nested <sub>script tags. Maybe use parentheses to disambiguate
  superscript?


Text HTML viewer:

- Display links to or with images with a distinct colour

- Allow resizing of frames

- Alert user when he attempts to follow a broken link to a fragment on the
  current page

- Include search string in 'Search string not found' error box

- Incremental-search

- Configurable highlight colour for text matched after a search

- Scroll when searching so that the current match is always displayed at
  the top of the screen (optional?)


User interface / terminal stuff:

- Use terminfo instead of hardwired ANSI control sequences

- Show any information specified with <meta> and <link> tags in the
  Document Info box

- More key-bindings for edit-boxes, including cut, copy, and paste

- Show selected link's title (which is specified by the title attribute) in the
  statusbar

- Support using the hardstatus line to display current page's title, URL, or
  whatever. (The hardstatus line is a fixed line in mythical terminals which
  GNU Screen emulates by using the last line of the terminal and people emulate
  in XTerms by changing the XTerms' windows' titles.) This merely entails
  sending the right escape sequences (the termcap/terminfo tsl/ts and fsl/fs
  capabilities) for the appropriate terminals.

- Use the alternate screen (termcap/terminfo capabilities smcup/ti
  and rmcup/te) in XTerms and GNU Screen

- Insert should toggle insert/overwrite mode.

- Copy URL to X clipboard (using X selections).


Generic listboxes:

- Easily togglable option for 'Search' in the bookmark mgr. to search
  collapsed folders

- Expand or collapse recursively and expand or collapse all folders in
  hierarchical listboxes

- Highlight marked listbox items in addition to putting asterisks next to them


Bookmarks:

- Sessions: Bookmark the current page of each tab or window under a single
  folder.

- Complementary 'open all bookmarks in folder' or 'open all marked bookmarks'
  buttons in the bookmark mgr.

- Support for bookmarked-link colour in addition to visited-link colour


Global history:

+ Show any info that can be found in globhist for the selected link in the Info
  box (last-visit-time and possibly page-title)


Options / keybindings / runtime configuration:

- Improve keybinding so that it works more universally

- Mouse buttonbinding ;)

- Support prefixes for more bindings; candidates: goto-url-current-link,
  add-bookmark-link, back, unback, document-info, next-frame, previous-frame,
  tab-prev, tab-next, tab-close, zoom-frame

- More tab-related bindings, such as select-tab (jump to the nth tab
  where n is specified by the key prefix), select-other-tab (select
  the previously selected tab), and move-tab-left and move-tab-right
  (to change the current tab's position on the tab-bar)


Downloads / scheduling:

- Allow multiple transfers to be queued up instead of cancelling the currently
  queued item when back is pressed

- When calling external viewer on files, assign temporary files the suffix
  appropriate to the file type (?)

- Passing URL to external command (possibly make alt+[0-9] to pass current link
  to external command (?)).

- Bandwidth limiter for file downloads.


MIME / mailcap:

- Allow the output from MIME handlers to be displayed in ELinks


Protocols / network:

- HTTPS proxy support (!) (I have no idea how to do it so someone else will
  have to; good job for a wannabe ELinks developer ;)

- Optional support for meta-refresh (that is, <meta http-equiv="refresh"
  content="5;url=http://foo.com/" />)


Scripting:

- Add Lua APIs to manipulate bookmarks and other things

- Lua execution ought to be changed. It has to be done script-oriented, where
  each script stands on his own, installs hooks handlers it wants etc.

- Redesign the whole scripting interface from scratch, generalizing it at the
  same time to multiple language backends. This should go hand-by-hand with
  plugins interface definition


Generic code changes:

- Change msg_box to use printf-style formats

- Optimize multiple _()s of the same strings by using temporary variables

- Create and use a structure to store URLs, instead of using a string (this
  should fix the bug that file-uploads are very slow and memory-consumptive)


Build-time configuration / build:

+ Some rules for sane handling of texinfo documentation


Permanent goals:

+ General code cleanup

+ Write some more documentation.. docs, a lot of docs!

+ Speed optimizations


Key: - nothing done + work in progress * almost ready
     (reflects only what is already committed to CVS)

$Id: TODO,v 1.54 2003/05/08 12:44:12 pasky Exp $
