				Color Models

The purpose of this document is to collect thoughts and ideas on how to mix
and adjust fore- and background colors to improve readability of pages.

Motivation
----------

ELinks already provides a mean to configure and adjust color combinations to
maximize readability. We would like to extend this capability to also include
the newly added 256 color mode.

For 16 colors the adjustment is done by doing a few lookups in a hard coded
color table. This is fine when there are only 16 * 8 fore- and background
combinations but would probably be too painful for 256 * 256 combinations.
Also the hardcoded table - although doing a good job - does not leave much up
for the users preferences. So the second goal is to also make the adjustment
more configurable so people with color deficiencies can tune the rendering to
their needs.

Ideas
-----

Partial sight, aging and congenital color deficits all produce changes in
perception that reduce the visual effectiveness of certain color combinations.
Two colors that contrast sharply to someone with normal vision may be far less
distinguishable to someone with a visual disorder. It is important to
appreciate that it is the contrast of colors one against another that makes
them more or less discernible rather than the individual colors themselves.

Converting from RGB to HSL will ease a lot the creation of a good color model.
Ie. current allow/forbid dark on black colors will be really simple and far
more universal.  I'm currently researching about rules to preserve page
readibility by eliminating bad colors combinations (like dark red on dark red,
or even primary red / primary blue, yellow on white, green on grey, ...) One
cool side effect, is that we can adapt a color model to take in account some
user's visual deficience (ie. rule like "do not use red colors at all",
"forbid orange on red", ...) Another color model may take in account screen
environment: "ensure very high lightness contrast".

TODO: Algoritms for determining bad color combinations.
TODO: Algoritms for finding the nearest good color combination.
TODO: How to cache the result and integrate it with the current color system.
TODO: How to make the configuration easy but still powerful.

Implementation
--------------

There is some sample code for RGB <-> HSL conversion posted to the elinks-dev
mailing list. It is expected to be merged to CVS when the color model itself
implementation will draw nearer.

Availability
------------

The color model idea sounds great, however its usability is probably rather
limited and most of the people could live fine without it (that is not to
dispute that it can prove to be unique and invaluable for the others). Thus,
it should be fully optional both at compile time and runtime.

It should still be possible to use only the original 16 colors fg_color xlat
table (which is so trivial that its inclusion probably need not be configurable
at the compile time), because its value is indisputably greater by orders of
magnitude for the whole (or most of the) scale of users - the approximation to
16 colors is so imprecise that the result is too often far from what the page
author intended. Pasky believes that the 256 colors already provide much
preciser transformation of the RGB triplet and thus it is quite unlikely the
color combinations shown would differ dramatically from the intended look.

Of course some people want to always force readibility over the web page's
author color choice (there is some really sick stuff color-wise around the web;
and of course there are the "secret" black-on-black or white-on-white texts
;-), and the people will all sorts of color disabilities (which are quite
frequent in the population, AFAIK). This would be a killer feature for them and
that is the reason why Pasky thinks that the compile time option for including
of color models implementation should be by default enabled. Pasky is still not
sure whether the color models should be by default enabled or disabled at the
runtime, pros and cons welcomed.

Further reading
---------------

Below are listed links to documents that have inspired this work.

http://citeseer.nj.nec.com/macintyre91constraintbased.html

	Selecting harmonious colours for traditional window systems can be a
	difficult and frustrating endeavor....

http://130.113.54.154/~monger/hsl-rgb.html

	Conversion algorithms for these color spaces are originally from the
	book Fundamentals of Interactive Computer Graphics by Foley and van
	Dam (c 1982, Addison-Wesley).

http://www.lighthouse.org/color_contrast.htm

	Basic introduction to usage of HSL colors.

$Id: color-model.txt,v 1.4 2003/10/07 20:42:28 pasky Exp $
